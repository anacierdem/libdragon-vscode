{
  "name": "RSPL",
  "scopeName": "source.rspl",
  "fileTypes": ["rspl"],
  "patterns": [
    {
      "include": "#comments"
    },
    {
      "include": "#annotations"
    },
    {
      "include": "#keywords"
    },
    {
      "include": "#functions"
    },
    {
      "include": "#macros"
    },
    {
      "include": "#strings"
    },
    {
      "include": "#numbers"
    },
    {
      "include": "#types"
    },
    {
      "include": "#operators"
    },
    {
      "include": "#preprocessor"
    },
    {
      "include": "#builtins"
    }
  ],
  "repository": {
    "comments": {
      "patterns": [
        {
          "name": "comment.line.double-slash.rspl",
          "match": "//.*$",
          "captures": {
            "0": { "name": "comment.line.double-slash.rspl" }
          }
        },
        {
          "name": "comment.block.rspl",
          "begin": "/\\*",
          "end": "\\*/",
          "captures": {
            "0": { "name": "comment.block.rspl" }
          },
          "contentName": "comment.block.rspl"
        }
      ]
    },
    "annotations": {
      "patterns": [
        {
          "name": "keyword.control.annotation.rspl",
          "match": "@(Barrier|Align|NoRegAlloc|NoReturn|Relative)\\b"
        },
        {
          "name": "keyword.control.annotation.rspl",
          "match": "@[A-Za-z][A-Za-z0-9]*\\b"
        }
      ]
    },
    "keywords": {
      "patterns": [
        {
          "name": "keyword.control.rspl",
          "match": "\\b(if|else|while|do|for|loop|goto|return|break|continue|switch|case|default|function|macro|command|state|temp_state|include|define|undef|alignas|extern|const|exit)\\b"
        }
      ]
    },
    "functions": {
      "patterns": [
        {
          "name": "entity.name.function.rspl",
          "match": "\\b([a-zA-Z_][a-zA-Z0-9_]*)\\s*(?=\\()"
        }
      ]
    },
    "macros": {
      "patterns": [
        {
          "name": "entity.name.function.preprocessor.rspl",
          "match": "\\b(macro)\\s+([a-zA-Z_][a-zA-Z0-9_]*)\\b"
        }
      ]
    },
    "strings": {
      "patterns": [
        {
          "name": "string.quoted.double.rspl",
          "begin": "\"",
          "end": "\"",
          "patterns": [
            {
              "name": "constant.character.escape.rspl",
              "match": "\\\\."
            }
          ]
        }
      ]
    },
    "numbers": {
      "patterns": [
        {
          "name": "constant.numeric.hex.rspl",
          "match": "\\b0x[0-9a-fA-F]+(('|')[0-9a-fA-F]+)*\\b"
        },
        {
          "name": "constant.numeric.binary.rspl",
          "match": "\\b0b[01]+(('|')[01]+)*\\b"
        },
        {
          "name": "constant.numeric.decimal.rspl",
          "match": "\\b[0-9]+(('|')[0-9]+)*\\b"
        }
      ]
    },
    "types": {
      "patterns": [
        {
          "name": "storage.type.rspl",
          "match": "\\b(u8|s8|u16|s16|u32|s32|vec16|vec32)\\b"
        },
        {
          "name": "storage.modifier.rspl",
          "match": "\\b(alignas|extern|const)\\b"
        },
        {
          "name": "storage.type.register.rspl",
          "match": "<\\$[a-zA-Z][0-9]>"
        }
      ]
    },
    "operators": {
      "patterns": [
        {
          "name": "keyword.operator.rspl",
          "match": "\\+|-|\\*|/|%|&|\\||\\^|~|<<|>>|>>>|<|>|<=|>=|==|!=|\\+=|-=|\\*=|/=|%=|&=|\\|=|\\^=|<<=|>>=|\\+\\*|\\|\\||&&|\\?|:"
        },
        {
          "name": "keyword.operator.vector.rspl",
          "match": "\\.[xyzwXYZW0-7]+"
        },
        {
          "name": "keyword.operator.type.rspl",
          "match": ":(s|u)(fract|int|8|16|32)"
        }
      ]
    },
    "preprocessor": {
      "patterns": [
        {
          "name": "meta.preprocessor.rspl",
          "match": "^\\s*#(define|include|ifdef|ifndef|if|else|elif|endif|error|pragma).*$"
        }
      ]
    },
    "builtins": {
      "patterns": [
        {
          "name": "support.function.rspl",
          "match": "\\b(dma_in|dma_in_async|dma_out|dma_out_async|dma_await|get_cmd_address|load_arg|swap|abs|min|max|clip|select|get_acc|get_vcc|clear_vcc|set_vcc|get_dma_busy|get_rdp_start|get_rdp_end|get_rdp_current|set_rdp_start|set_rdp_end|set_rdp_current|set_dma_addr_rsp|set_dma_addr_rdram|set_dma_write|set_dma_read|invert_half|invert|invert_half_sqrt|load|store|load_vec_u8|load_vec_s8|store_vec_u8|store_vec_s8|load_transposed|store_transposed|transpose|asm|asm_op|asm_include|dotXYZW)\\b"
        }
      ]
    }
  }
}
